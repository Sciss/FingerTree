h2. FingerTree

h3. statement

This provides a data structure called FingerTree[1] for the Scala programming language. The code was basically extracted from the FingerTree class from "Scalaz":http://code.google.com/p/scalaz/, stripping away as much of the encumbered Scalaz as possible, so that it becomes a halfway self contained project. It is also an attempt to make a more standard Scala like interface, including ordered sequences and interval trees.

All modifications by Hanns Holger Rutz to the original code published under the same BSD style license as Scalaz. To contact the author, send an email to @contact at sciss.de@

fn1. Hinze, R. and Paterson, R., Finger trees: a simple general-purpose data structure, Journal of Functional Programming, vol. 16 no. 2 (2006), pp. 197--217

h3. notes

Currently the FingerTree, used for indexed sequences, is around 20 times slower than Scala's standard Vector class. Main problem I guess is missing specialization, but with Scala 2.8.1 it is impossible to add, as scalac chokes on almost any specialization annotation that you try to add :-(

h3. todo

* Daniel Spiewak has an alternative implementation at "github":https://github.com/djspiewak/extreme-cleverness that should be benchmarked against this implementation